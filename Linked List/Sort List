class Solution {
    public ListNode sortList(ListNode head) {
        if(head==null||head.next==null)return head;
        ListNode fast=head; ListNode slow=head; ListNode temp=head;
        while(fast!=null&&fast.next!=null){
            temp=slow;
            fast=fast.next.next;
            slow=slow.next;
        }
        temp.next=null;
        //left sort
        ListNode left=sortList(head);
        //right sort
        ListNode right=sortList(slow);
        //merge
        return merge(left,right);
    }
    public ListNode merge(ListNode list1, ListNode list2){
        ListNode list= new ListNode(-1);
         ListNode temp=list;
        while(list1!=null && list2!=null){
            if(list1.val<=list2.val){
                temp.next=list1;
                list1=list1.next;
                temp=temp.next;
            }
            else{
                temp.next=list2;
                list2=list2.next;
                temp=temp.next;
            }
        }

        while(list1!=null){
            temp.next=list1;
            list1=list1.next;
            temp=temp.next;
        }
         while(list2!=null){
            temp.next=list2;
            list2=list2.next;
            temp=temp.next;
        }
        return list.next;
    }
}
