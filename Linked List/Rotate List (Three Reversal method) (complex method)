class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head==null ||head.next==null)return head;
        if(k==0)return head; 
        ListNode current=head; int size=0; 
        while(current!=null){
            current=current.next;
            size++;
        }
          if(k>=size)k=k%size;
        if(k==0)return head;
        //reverse entire LL
        ListNode temp=head; ListNode prev=null; ListNode next=temp.next;
        while(temp.next!=null){
            temp.next=prev;
            prev=temp;
            temp=next;
            next=next.next;
        }
        temp.next=prev;

        //reverse first k
        prev=null; next=temp.next; ListNode tail=temp;
        ListNode newHead=null;
        if(k==1){
            temp.next=null;
        }
        else{
        while(k>1){
            temp.next=prev;
            prev=temp;
            temp=next;
            next=next.next;
            k--;
        }
        temp.next=prev;
        }
        newHead=temp;
        //reverse remaining
        temp=next; next=temp.next; prev=null;
        while(temp.next!=null){
            temp.next=prev;
            prev=temp;
            temp=next;
            next=next.next;
        }
        temp.next=prev;
        tail.next=temp;
        return newHead;
    }
}
